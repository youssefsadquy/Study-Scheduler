/'
 ' * * * Group 36 Class Diagram * * * 
 ' 
 ' Paste UML source code into online demo server to generate image at:
 ' https://www.plantuml.com/plantuml/uml/SyfFKj2rKt3CoKnELR1Io4ZDoSa70000
 '
 ' Images are also added to the main repository ' Class_Diagram.png '
 '
 ' OR
 '
 ' You will need to install PlantUML tools to generate the 
 ' Image from source.
 ' 
 ' https://plantuml.com/download
 '
 ' # : Protected
 ' ~ : Package Private
 ' + : Public
 ' - : Private
 '
 '/

@startuml Class_Diagram

class System {
    + LocalDateTime systemStarted
    + LocalDateTime upTime
    + User[] users

    + setSystemStarted()
    + getUpTime()
    + getSystemStatus()
}

abstract User {
    + uuid id
    + int accessControl
    + String firstName
    + String knownAs

    - setName() : String
    + getName() : String

    - setId() : int
    # getId() : int
}

class Student {
    + bool isRegistered
    + String courseName
    + int levelOfStudy
    + int yearOfStudy

    + getCourse()
    + getModules()
}

class Conveynor {
    Modules[] assignedModules
    + editCourseDates()
    + editReadingLists()
    + uploadMaterials()
    + hideCourseMaterials()
    + showCourseMaterials()
    + getAssignedModules()
}

class SystemAdmin {
    + getUserByName()
    + getUserByID()
    + addUser()
    + deleteUser()
    + modifyUser()
    + setUserAccessControl()
    + getSystemStatus()
    + getUpTime()
}

class CourseAdmin {
    + setCourseName()
    + getCourseName()
    + setCourseId()
    + getCourseId()
    + setModules()
    + getModules()
}

class Course {
    uuid courseId
    String courseName
    Student[] students
    CourseAdmis[] courseAdminds
    Modules[] modules
    + getRegisteredUsers()
    + getCourseAdminds()
    + getStudents()
}

class DailyTasks {
    Student student
    String taskName
    bool tasksCompleted
    int tasksOutstanding

    + setTasks()
    + getTasks()
    + markTaskDone()
}

class StudentSchedule {
    Student student
    ScheduleUI schedule
    ScheduleUI viewScehdule
    ScheduleUI adjustSchedule
    + getSchedule()
    + setSchedule()
}

class Modules {
    uuid id
    int credits
    int moduleId
    String moduleName
    Conveynor[] conveynors
    Student[] registeredStudents

    + getModuleMaterials()
    + getModuleDetails()
    + getConveynors()
    + getStudents()
}

'System can exist without user but not the other way around
System "1" *- "1..*" User : contains

System -- Course
System *- "1..*" SystemAdmin : maintains

User *-- Conveynor : inherits
User *-- SystemAdmin : inherits
User *-- CourseAdmin : inherits
User *-- Student : inherits

Course o-up- CourseAdmin
Course o-- "1..*" Modules

Conveynor "1" --o "1..*" Modules : "Taught by"
Student --o Course
Student -o "1..*" Modules

Student *-- DailyTasks
Student *-- StudentSchedule

@enduml